#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã ‚Ññ3
# Apache Airflow ETL Pipeline

echo "üßπ –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê DOCKER –û–ö–†–£–ñ–ï–ù–ò–Ø"
echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –í–°–ï –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –æ–±—Ä–∞–∑—ã, —Ç–æ–º–∞ –∏ —Å–µ—Ç–∏!"
echo ""

# –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå –û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    exit 1
fi

echo "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É Docker..."
echo ""

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –í–°–ï–• –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "1Ô∏è‚É£  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
running_containers=$(sudo docker ps -q)
if [ ! -z "$running_containers" ]; then
    sudo docker stop $running_containers
    echo "‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
else
    echo "‚ÑπÔ∏è  –ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi
echo ""

# 2. –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
echo "2Ô∏è‚É£  –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
if sudo docker compose down -v --remove-orphans 2>/dev/null; then
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ —É–¥–∞–ª–µ–Ω—ã"
else
    echo "‚ÑπÔ∏è  Docker compose —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–∂–µ —É–¥–∞–ª–µ–Ω—ã"
fi
echo ""

# 3. –£–¥–∞–ª–µ–Ω–∏–µ –í–°–ï–• –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "3Ô∏è‚É£  –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
all_containers=$(sudo docker ps -a -q)
if [ ! -z "$all_containers" ]; then
    sudo docker rm -f $all_containers
    echo "‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
else
    echo "‚ÑπÔ∏è  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi
echo ""

# 4. –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
echo "4Ô∏è‚É£  –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
project_images=(
    "apache/airflow:2.5.0-python3.8"
    "postgres:12-alpine"
    "mailhog/mailhog:latest"
    "airflow-custom:latest"
)

for image in "${project_images[@]}"; do
    if sudo docker rmi -f "$image" 2>/dev/null; then
        echo "‚úÖ –£–¥–∞–ª–µ–Ω –æ–±—Ä–∞–∑: $image"
    else
        echo "‚ÑπÔ∏è  –û–±—Ä–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω: $image"
    fi
done
echo ""

# 5. –£–¥–∞–ª–µ–Ω–∏–µ –í–°–ï–• –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo "5Ô∏è‚É£  –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
if sudo docker image prune -a -f; then
    echo "‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã"
else
    echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–±—Ä–∞–∑–æ–≤"
fi
echo ""

# 6. –£–¥–∞–ª–µ–Ω–∏–µ –í–°–ï–• —Ç–æ–º–æ–≤
echo "6Ô∏è‚É£  –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–º–æ–≤..."
all_volumes=$(sudo docker volume ls -q)
if [ ! -z "$all_volumes" ]; then
    sudo docker volume rm -f $all_volumes 2>/dev/null
    echo "‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ —Ç–æ–º–∞"
else
    echo "‚ÑπÔ∏è  –¢–æ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi
echo ""

# 7. –£–¥–∞–ª–µ–Ω–∏–µ –í–°–ï–• —Å–µ—Ç–µ–π (–∫—Ä–æ–º–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö)
echo "7Ô∏è‚É£  –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ—Ç–µ–π..."
if sudo docker network prune -f; then
    echo "‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ—Ç–∏"
else
    echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–µ—Ç–µ–π"
fi
echo ""

# 8. –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã Docker
echo "8Ô∏è‚É£  –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã Docker..."
if sudo docker system prune -a -f --volumes; then
    echo "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã Docker"
else
    echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ —Å–∏—Å—Ç–µ–º—ã"
fi
echo ""

# 9. –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
echo "9Ô∏è‚É£  –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."

# –£–¥–∞–ª–µ–Ω–∏–µ SQLite –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
rm -f *.db 2>/dev/null && echo "‚úÖ –£–¥–∞–ª–µ–Ω—ã —Ñ–∞–π–ª—ã –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö (*.db)" || echo "‚ÑπÔ∏è  –§–∞–π–ª—ã –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

# –£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤
rm -rf logs/ 2>/dev/null && echo "‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞ –ª–æ–≥–æ–≤" || echo "‚ÑπÔ∏è  –ü–∞–ø–∫–∞ –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ Python
find . -name "*.pyc" -delete 2>/dev/null && echo "‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã Python (.pyc)"
find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null && echo "‚úÖ –£–¥–∞–ª–µ–Ω—ã –∫—ç—à-–ø–∞–ø–∫–∏ Python (__pycache__)"

# –£–¥–∞–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -f .DS_Store 2>/dev/null
rm -f Thumbs.db 2>/dev/null
echo ""

# 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—á–∏—Å—Ç–∫–∏
echo "üîü –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—á–∏—Å—Ç–∫–∏..."
echo ""

echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Docker –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:"
sudo docker system df
echo ""

echo "üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
container_count=$(sudo docker ps -a -q | wc -l)
if [ "$container_count" -eq 0 ]; then
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
else
    echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
    sudo docker ps -a --format "table {{.Names}}\t{{.Image}}\t{{.Status}}"
fi
echo ""

echo "üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è –æ–±—Ä–∞–∑—ã:"
image_count=$(sudo docker images -q | wc -l)
if [ "$image_count" -eq 0 ]; then
    echo "‚úÖ –û–±—Ä–∞–∑—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
else
    echo "‚ÑπÔ∏è  –ù–∞–π–¥–µ–Ω—ã –æ–±—Ä–∞–∑—ã:"
    sudo docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"
fi
echo ""

echo "üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Ç–æ–º–∞:"
volume_count=$(sudo docker volume ls -q | wc -l)
if [ "$volume_count" -eq 0 ]; then
    echo "‚úÖ –¢–æ–º–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
else
    echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã —Ç–æ–º–∞:"
    sudo docker volume ls
fi
echo ""

echo "üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å–µ—Ç–∏:"
network_count=$(sudo docker network ls --filter type=custom -q | wc -l)
if [ "$network_count" -eq 0 ]; then
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
else
    echo "‚ÑπÔ∏è  –ù–∞–π–¥–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–µ—Ç–∏:"
    sudo docker network ls --filter type=custom
fi
echo ""

# 11. –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
echo "üéâ –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo ""
echo "üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:"
ls -la
echo ""

echo "üíæ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ:"
sudo docker system df
echo ""

echo "üîÑ –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "   sudo docker compose up -d"
echo ""

echo "üìö –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "   cd .. && rm -rf $(basename $(pwd))/"
echo ""

echo "‚ú® Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–æ!"
echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ –Ω–æ–≤–æ–º—É –∑–∞–ø—É—Å–∫—É –ø—Ä–æ–µ–∫—Ç–∞!"
